20%

Understanding and Using APIs

-  Construct a REST API request to accomplish a task given API documentation
-  Describe common usage patterns related to webhooks
-  Identify the constraints when consuming APIs
-  Explain common HTTP response codes associated with REST APIs
-  Troubleshoot a problem given the HTTP response code, request and API documentation
-  Identify the parts of an HTTP response (response code, headers, body)
-  Utilize common API authentication mechanisms: basic, custom token, and API keys
-  Compare common API styles (REST, RPC, synchronous, and asynchronous)
-  Construct a Python script that calls a REST API using the requests library


https://www.cbtnuggets.com/certification-playlist/Cisco/devnet-associate

------------------------------------------------------------------------------------------------------------

2.1 - Construct a REST API request to accomplish a task given API documentation

https://www.cbtnuggets.com/learn/it-training/restful-api-fundamentals

APi meant for machine to machine comms.
in vscode press [Ctrl + Alt + r] on a url to make a request call
Mainly use JSON data.

API constraints (restful)
    - Uniform interface - consistant and decoupled interface for api calls.
    - client - server , comms needs to happed through the api interface.
    - statlessness, each api call need all the info needed to make the api call. The server doesnt remeber the previous call.

REST vs SOAP
    - rest , guidelines for apr, architecture. Not a protocol data agnostic.
    - soap , protocol , spec a variations layers. Only uses xml data.

REST tools
    - web browser > devloper tools.
    - vscode REST client extension. http file.
    - POSTMAN

------------------------------------------------------------------------------------------------------------
2.2 -  Describe common usage patterns related to webhooks
------------------------------------------------------------------------------------------------------------

2.3 - Identify the constraints when consuming APIs
------------------------------------------------------------------------------------------------------------

2.4 - Explain common HTTP response codes associated with REST APIs

HTTP 1.1 most versions on the web.

R/R
Start line -- verb GET/POST/ etc
headers
----------- blank line
bode payload

In POSTMAN console open log, bottom left.

REQUEST METHOD - startline verb.   GET/HEAD/POST/PUT  DELETE/CONNECT/...

RESPONSE CODES - start line protocal xxx digit.
1xx - informational response
2xx - successful response.
3xx - redir
4xx - client errors
5xx - server errors

404 - page not found.
400 - bad request


HEADERS - k:v pairs, should get a response on the response.
not required and not standardised, api can have there own api headers.

------------------------------------------------------------------------------------------------------------

2.7 -  Utilize common API authentication mechanisms: basic, custom token, and API keys

https://www.cbtnuggets.com/learn/it-training/authentication-http-rest

Base64 Encoding vs Encryption.

encoding is not encryption.
64 charaters.
url safe.

Basic auth - rfc7617 \
in the http req headers
Basic sdbfsunfosnfoisnf==
always use https as it will be visable in http.

API key - single token stored in applications.
trasmitted in a reuest header. almost the same as Basic auth.

authentication with 

Token authentication - statless auth \
most popular, JWTs  = JSON + Crypto sig. The Base64 encoded.
linked with session id
JWT means the api is stateless.
speed - doesnt need to do a DB lookup.
Scalability - user 